////the worst time complexity of this algorithm is O(n^2)
///and the best time complexity is O(n) for the sorted array



#include<bits/stdc++.h>
using namespace std;
void insertion_sort(int arr[], int n)
{
	for (int i = 0; i <= n - 1; i++)
	{
		int j = i;

		while (j > 0 && arr[j - 1] > arr[j])
		{
			int temp = arr[j - 1];
			arr[j - 1] = arr[j];
			arr[j] = temp;
			j--;
			cout << "Runs" << endl;
		}
	}
}
int main()
{
	//take element and place it in it correct position this is basically insertion sort
	//

	int n;
	cin >> n;

	int arr[n];
	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}

	insertion_sort(arr, n);

	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << " ";
	} cout << endl;


	return 0;

}
