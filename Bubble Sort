////the worst time complexity for the algorithm is O(n^2)
////the best time complexity for the algorithm is O(N)

#include<bits/stdc++.h>
using namespace std;
void bubble_sort(int a[], int n)
{
	for (int i = n - 1; i >= 0; i--)
	{
		int didSwap = 0;
		for (int j = 0; j <= i - 1; j++)
		{
			if (a[j] > a[j + 1])
			{
				int temp = a[j];
				a[j] = a[j + 1];
				a[j + 1] = temp;
				didSwap = 1;
			}
		}
		if (didSwap == 0)
		{
			break;
		}
	}
}

int main()
{
	///bubble sort is just opposite of the selection sort
	///here the adjacent word is most important
	///after a iteration of adjacent swapping the maximum value will be in the last
	///position

	int n;
	cin >> n;

	int arr[n];
	for (int i = 0; i < n; i++)
	{
		cin >> arr[i];
	}
	
	bubble_sort(arr , n);

	for (int i = 0; i < n; i++)
	{
		cout << arr[i] << " ";
	} cout << endl;
	return 0;

}
